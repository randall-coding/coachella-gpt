tools: sys.read, sys.write, search-coachella, github.com/gptscript-ai/search/brave, sys.http.html2text?, get-songs-from-artist-url, 
#json_response true args for 
args: bands: A list of bands you like.
json response: true
temperature: 0.2

Perform the following steps in order:

You are a music expert, concert expert, and expert web researcher.

Based on the user input, find bands on coachella's lineup page which the user would like that are playing.  This will include both the specific bands the user mentioned, genres, along with similar artists you suggest.  

If none of the bands are found on the coachella lineup say "Could not find any matches" and list all the args.
  
If you found bands playing next at Coachella (matches.txt) return every band from matches.txt in json with format as an array where each object has the following structure { "name": value, "spotifyUrl": url_value, songs: [{"name": value, "url": song_url_value}] }.

But before you output that, if you could not find songs for any artist, use search to find the correct link to their spotify by searching "Spotify artist ${band}" and trying again.  If you still can't find the spotify url, keep the band in the final output but songs will be [].

---
name: search-coachella
description: Find bands you might like at coachella
args: bands: A list of bands you like.
#tools: download-coachella-content
tools: sys.http.html2text?, sys.read, sys.write, github.com/gptscript-ai/search/brave, download-coachella-content, find-similar-bands

Do the following in order:

Write down the input bands you've parsed from the input into input.txt file.

Download the contents of coachella lineup into lineup.txt

Next find similar bands which are playing at coachella and write the output into matches.txt.

Return all the bands from matches.txt along with (optionally, but try for each) a working link to their spotify page.

#---
#name: download-coachella-content
#description: Content of coachella lineup page

# #!python3 coachella.py "https://www.coachella.com/lineup"

---
name: download-coachella-content
description: Downloads the content of coachella lineup page into file lineup.txt
tools:  sys.http.html2text?, sys.read, sys.write, github.com/gptscript-ai/search/brave

If lineup.txt already exists and is for the upcoming show (today's date is before the concert) then skip running tool and output "OK lineup.txt up to date".  Otherwise...

Search for the upcoming coachella lineup based on a specific year (either this year or next year if we passed it) and find the pitchfork.com page for it.  Search should look like "coachella lineup site:pitchfork.com"

Take that url, visit the page and save all the bands playing at coachella in lineup.txt.  

---
name: find-similar-bands
description: Finds similar bands from concert
args: lineup.txt: Concert band lineup file 
args: bands:  A list of bands you like   
tools:  sys.read, sys.write
temperature: 0.7
internal prompt: false 

You are a music expert. You know all abouts bands, music genres and similar bands.  Look through each band/artist in lineup.txt to find all bands in lineup.txt that the user might like based on the "bands" input.  
This will include the specific bands from the input as well as several suggestions based on those band preferences. 

Write all the bands you find into matches.txt. 

The matches.txt format will have band names separated by newline instead of comman.  

---
name: download-website-content
description: used to download websites including those which render using javascript 
args: url: url to download
args: filename: (optional) filename to write website into.  default to "website.txt"
args: wait_time: (optional) wait time in seconds to allow the page to load.  default None.

#!python3 download-website-content.py "$url"

---
name: get-songs-from-artist-url
description: get songs from url of spotify artist
args: url: url towards an artist
tools: github.com/gptscript-ai/search/brave
temperature: 0.2

#!python3 songs.py "$url"